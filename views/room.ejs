<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Meeting Room</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
  /* Base Styles (apply to all screen sizes unless overridden by media queries) */
  body {
    margin: 0;
    font-family: 'Segoe UI', sans-serif;
    background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
    background-size: 400% 400%;
    animation: bgShift 20s ease infinite;
    color: #fff;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
  }

  @keyframes bgShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  header {
    padding: 12px 20px;
    background-color: rgba(44, 47, 51, 0.8);
    display: flex;
    justify-content: space-between;
    align-items: center;
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
    z-index: 100;
    /* Define a clear height for header so we can use it for chat positioning */
    height: 50px; /* Adjust this value if your header is taller/shorter */
    box-sizing: border-box; /* Include padding in height calculation */
  }

  #main {
    flex: 1;
    display: flex;
    overflow: hidden;
  }

  #video-grid {
    flex: 3;
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;
    padding: 12px;
    gap: 12px;
    overflow-y: auto;
    /* Ensure padding for fixed controls at the bottom on larger screens */
    padding-bottom: 100px; /* Keep this to account for the controls bar */
    padding-top: 60px; /* Keep this to account for the header */
  }

  video {
    width: 250px;
    border-radius: 12px;
    background: black;
  }

  .video-container {
    position: relative;
    border-radius: 10px;
    overflow: hidden;
  }

  .name-label {
    position: absolute;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.6);
    padding: 4px 8px;
    font-size: 12px;
    border-top-right-radius: 6px;
  }

  #chat-container {
    display: flex;
    flex-direction: column;
    background: rgba(41, 43, 47, 0.85);
    border-left: 1px solid #444;
    padding: 10px;
    backdrop-filter: blur(8px);
    position: fixed;
    right: 16px; /* Keep it on the right */
    width: 300px; /* Desktop width */
    z-index: 50;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);

    /* Dynamic height for desktop/larger screens */
    /* Adjust these values to exactly match your header and controls height + desired small margin */
    top: 50px; /* Should be equal to header height if you want it flush */
    bottom: 80px; /* Should be roughly controls height + bottom margin (15px) */
    height: auto; /* Let top/bottom define height */
  }

  #messages {
    flex: 1;
    overflow-y: auto;
    padding-right: 5px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .chat-message {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 8px 12px;
    border-radius: 8px;
    max-width: 80%;
    word-wrap: break-word;
    font-size: 14px;
  }

  .chat-message.me {
    background-color: rgba(88, 101, 242, 0.3);
    align-self: flex-end;
  }

  #chat-form {
    display: flex;
    margin-top: 10px;
  }

  #chat-input {
    flex: 1;
    padding: 10px;
    border: none;
    border-radius: 10px 0 0 10px;
    background-color: #2f3136;
    color: white;
    font-size: 16px;
  }

  #chat-form button {
    padding: 10px 16px;
    background-color: #5865f2;
    border: none;
    border-radius: 0 10px 10px 0;
    color: white;
    cursor: pointer;
    transition: background 0.3s ease;
    font-size: 16px;
  }

  #chat-form button:hover {
    background-color: #4752c4;
  }

  #reactions {
    margin-top: 10px;
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .reaction-btn {
    padding: 6px 12px;
    border-radius: 8px;
    border: none;
    background-color: #40444b;
    color: white;
    cursor: pointer;
    font-size: 14px;
    transition: background 0.2s ease;
  }

  .reaction-btn:hover {
    background-color: #5865f2;
  }

  #controls {
    position: fixed;
    bottom: 15px; /* This is the `bottom` reference for the controls bar itself */
    left: 50%;
    transform: translateX(-50%);
    background: rgba(50, 50, 50, 0.85);
    padding: 10px 16px;
    border-radius: 24px;
    display: flex;
    gap: 12px;
    backdrop-filter: blur(12px);
    z-index: 1000;
    box-shadow: 0 4px 16px rgba(0,0,0,0.4);
    /* Define a clear height for controls so we can use it for chat positioning */
    height: 60px; /* Adjust this value if your controls bar is taller/shorter */
    box-sizing: border-box; /* Include padding in height calculation */
  }

  #controls button {
    padding: 10px 16px;
    font-size: 16px; /* Base Font Awesome icon size for controls */
    border-radius: 10px;
    border: none;
    background-color: #7289da;
    color: white;
    cursor: pointer;
    transition: background 0.2s ease;
  }

  #controls button:hover {
    background-color: #5b6eae;
  }

  /* Explicitly target Font Awesome icons within controls */
  #controls button i.fas {
    font-size: 16px; /* Ensure FA icons have a base size */
  }

  .modal-overlay {
    background: rgba(0, 0, 0, 0.8);
    position: fixed;
    inset: 0;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-content {
    background: white;
    color: black;
    padding: 20px;
    border-radius: 10px;
    width: 320px;
    text-align: center;
  }

  .modal-content button {
    margin-left: 10px;
    padding: 6px 12px;
    background-color: #7289da;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
  }

  /* Scrollbar styling */
  #messages::-webkit-scrollbar {
    width: 6px;
  }

  #messages::-webkit-scrollbar-thumb {
    background-color: rgba(255,255,255,0.2);
    border-radius: 3px;
  }

  /* --- Mobile Specific Styles --- */
  @media screen and (max-width: 768px) {
    #main {
      flex-direction: column;
    }

    #video-grid {
      /* Adjust padding to account for fixed header and fixed controls + fixed chat */
      padding-top: 60px; /* Header height (50px) + small margin (10px) */
      /* This padding-bottom must be total height of controls + chat + any desired gap */
      padding-bottom: calc(100% - 70px - 70px); /* Adjust based on chat and controls height */
      /* Let's be more precise: height of controls (60px) + its bottom (15px) + chat height (let's say 70vh from top:70 to bottom:80 is about 70vh) */
      /* A more robust way for video-grid padding on mobile when chat is fixed: */
      padding-bottom: 400px; /* ESTIMATE: height of fixed chat (approx 300px) + controls (60px) + bottom margin of controls (15px) */
    }

    #chat-container {
      position: fixed;
      left: 16px;
      right: 16px;
      /* Adjust these values to be flush with header and controls */
      top: 50px; /* This should be the exact height of your header if you want it flush */
      bottom: 80px; /* This should be the height of your controls bar (60px) + its bottom position (15px) + maybe 5px gap = 80px */
      width: auto;
      height: auto; /* Let top/bottom define height dynamically */
      max-height: calc(100vh - 120px); /* Safety net for very tall screens: viewport height minus header height (50) and controls height+bottom (80) */
      border-left: none;
      border-top-left-radius: 12px;
      border-top-right-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      z-index: 999;
      padding: 15px;
    }

    /* Adjust font sizes and padding within chat container for mobile */
    .chat-message {
      font-size: 16px;
      padding: 10px 15px;
    }

    #chat-input {
      font-size: 18px;
      padding: 12px;
      border-radius: 12px 0 0 12px;
    }

    #chat-form button {
      font-size: 18px;
      padding: 12px 20px;
      border-radius: 0 12px 12px 0;
    }

    #chat-form button i.fas {
        font-size: 18px;
    }

    .reaction-btn {
      font-size: 16px;
      padding: 8px 14px;
      border-radius: 10px;
    }

    #controls {
      flex-wrap: wrap;
      bottom: 15px; /* Stay fixed at this distance from the bottom */
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - 32px);
      padding: 12px 15px;
      gap: 10px;
    }

    #controls button {
      font-size: 18px;
      padding: 12px 18px;
    }

    #controls button i.fas {
        font-size: 18px;
    }

    header h3, header ul {
        font-size: 14px;
    }
  }
</style>
</head>
<body>
  <div id="waiting-room" style="display:none; text-align: center; padding: 50px;">
    <h2>‚è≥ Waiting for host approval...</h2>
    <p>Please wait while the host reviews your request to join.</p>
  </div>
   <div id="meeting-ui" style="display:none;">
  <header>
    <h3>Room ID: <%= roomId %></h3>
    <ul id="user-list" style="list-style: none; display: flex; gap: 10px;"></ul>
  </header>

  <div id="main">
    <div id="video-grid"></div>

<div id="chat-container" class="flex flex-col">

      <div id="messages" class="chat-messages"></div>

      <form id="chat-form" class="chat-form">
        <input id="chat-input" type="text" placeholder="Type message..." autocomplete="off">
        <button type="submit">Send</button>
      </form>

      <div id="reactions">
        <button class="reaction-btn" data-reaction="‚úã">‚úã Raise Hand</button>
        <button class="reaction-btn" data-reaction="üëç">üëç</button>
        <button class="reaction-btn" data-reaction="‚ù§Ô∏è">‚ù§Ô∏è</button>
        <button class="reaction-btn" data-reaction="üòÇ">üòÇ</button>
      </div>
    </div>
  </div>

  <div id="controls">
    <button id="mute-btn"> <i class="fas fa-microphone"></i></button>
    <button id="video-btn">  <i class="fas fa-video"></i></button>
    <button id="share-screen-btn"><i class="fas fa-desktop"></i></button>
    <button id="invite-btn"> <i class="fas fa-user-plus"></i></button>
<button id="leave-btn"> <i class="fas fa-sign-out-alt"></i></button>
<% if (isHost) { %>
  <button id="end-btn"> <i class="fas fa-times-circle"></i></button>
<% } %>

  </div>
  </div>

  <script>
    const ROOM_ID = "<%= roomId %>";
    const my_username = "<%= my_username %>";
    let isHost = <%= JSON.stringify(isHost) %>;
    const requireApproval = <%= JSON.stringify(requireApproval) %>;
  </script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js"></script>
  <script src="/js/room.js"></script>
</body>
</html>
